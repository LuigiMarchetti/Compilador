public interface ParserConstants
{
    int START_SYMBOL = 37;

    int FIRST_NON_TERMINAL    = 37;
    int FIRST_SEMANTIC_ACTION = 61;

    int[][] PARSER_TABLE =
            {
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1,  4, -1, -1, -1, -1, -1, -1, -1,  7,  5, -1,  6,  8, -1,  8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 11,  9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, 13, 13, 13, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, 21, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, 25, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1,  1, -1, -1, -1, -1, -1, -1, -1,  1,  1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1,  2, -1, -1, -1, -1, -1, -1, -1,  2,  2, -1,  2,  2, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, 15, 16, 17, -1, -1, 19, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }
            };

    int[][] PRODUCTIONS =
            {
                    { 10, 13, 27, 45, 28 },
                    { 38, 22, 46 },
                    { 45 },
                    {  0 },
                    { 40, 39 },
                    { 55 },
                    { 56 },
                    { 57 },
                    { 60 },
                    { 24, 51 },
                    {  0 },
                    { 23, 52 },
                    {  3, 41 },
                    {  0 },
                    { 21, 40 },
                    {  4 },
                    {  5 },
                    {  6 },
                    { 16 },
                    {  9 },
                    { 12, 25, 42, 26 },
                    { 44, 40, 43 },
                    { 22, 44, 40, 43 },
                    {  0 },
                    {  6, 21 },
                    {  0 },
                    { 14, 25, 47, 26 },
                    { 52, 48 },
                    { 21, 52, 48 },
                    {  0 },
                    { 11, 25, 52, 26, 27, 49, 28, 58 },
                    {  0 },
                    {  8, 27, 49, 28 },
                    { 53, 22, 50 },
                    { 53, 22, 50 },
                    {  0 },
                    { 17, 25, 52, 26,  7, 27, 49, 28 },
                    { 15, 27, 49, 28, 17, 25, 52, 26 }
            };

    String[] PARSER_ERROR =
            {
                    "",
                    "EOF", //"Era esperado fim de programa",
                    "palavra_reservada", //"Era esperado palavra_reservada"
                    "identificador", //"Era esperado identificador",
                    "constante_int", //"Era esperado constante_int",
                    "constante_float", //"Era esperado constante_float",
                    "constante_string", //"Era esperado constante_string",
                    "do",
                    "else",
                    "false",
                    "fun",
                    "if",
                    "in",
                    "main",
                    "out",
                    "repeat",
                    "true",
                    "while",
                    "\"&\"",
                    "\"|\"",
                    "\"!\"",
                    "\",\"",
                    "\";\"",
                    "\"=\"",
                    "\":\"",
                    "\"(\"",
                    "\")\"",
                    "\"{\"",
                    "\"}\"",
                    "\"==\"",
                    "\"!=\"",
                    "\"<\"",
                    "\">\"",
                    "\"+\"",
                    "\"-\"",
                    "\"*\"",
                    "\"/\"",
                    "fun",
                    "identificador if in out repeat while",
                    "; = :",
                    "identificador",
                    ", ; = : )",
                    "identificador constante_string",
                    "; )",
                    "identificador constante_string",
                    "identificador if in out repeat while",
                    "identificador if in out repeat while }",
                    "<lista_expressoes>",
                    ", )",
                    "<lista_comandos>",
                    "}",
                    "constante_int constante_float constante_string false repeat",
                    "<expressao>",
                    "<comando>",
                    "<cmd_atribuicao>",
                    "<cmd_entrada>",
                    "out",
                    "fun",
                    "else ;",
                    "<cmd_selecao2>",
                    "repeat while"
            };
}
